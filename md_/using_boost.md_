# Boost

Для использования библиотек `Boost` надо перед подключением данного файла включить использование `Boost`:

```cmake
set(UMBA_USE_BOOST ON)

include(${CMAKE_CURRENT_LIST_DIR}/.cmake/umba.cmake)

```

## Boost в режиме header-only

При включении использования библиотеки `Boost` по умолчанию включается режим
использования header-only библиотек.

Для указания месторасположения библиотеки Boost следует задать переменную `Boost_INCLUDE_DIR`:
```cmake
set(Boost_INCLUDE_DIR "Path/to/boost")
```

Можно один раз задать в системе переменную окружения `BOOST_ROOT`, и если 
переменная `Boost_INCLUDE_DIR` явно не задаётся в вашем `CMakeLists.txt`, то её значение будет получено из
переменной окружения `BOOST_ROOT`.


## Настройка системы для использования Boost в режиме header-only

Для использования библиотек `Boost` в режиме header-only требуется скачать 
архив оффициального релиза - [boost_1_85_0.zip](https://archives.boost.io/release/1.85.0/source/boost_1_85_0.zip)
(или в любом другом формате архива [отсюда](https://www.boost.org/users/history/version_1_85_0.html)).

Скачанный архив следует разархивировать, например, в каталог `D:\boost_1_85_0`.

После этого следует установить переменную окружения `BOOST_ROOT`:
```
BOOST_ROOT=D:\boost_1_85_0
```

## Boost в режиме FetchContent

В данном режиме вся библиотека `Boost` подключается в текущий проект, 
и к использованию становяться доступны все библиотеки, в т.ч. и те, которые требуют компиляции
из исходных кодов.

Данный режим включается установкой переменной `UMBA_USE_BOOST_FETCH` до включения данного файла:
```cmake
set(UMBA_USE_BOOST ON)
set(UMBA_USE_BOOST_FETCH ON)

include(${CMAKE_CURRENT_LIST_DIR}/.cmake/umba.cmake)
```

Данный режим тратит довольно много времени на скачивание и конфигурирование библиотеки `Boost` каждый раз
при генерации сборочных скриптов (до нескольких минут).

В переменной `UMBA_BOOST_CMAKE_FETCH_URL` можно задать адрес архива для скачивания.
По умолчанию используется `https://github.com/boostorg/boost/releases/download/boost-1.85.0/boost-1.85.0-cmake.tar.xz`.

Если переменная `UMBA_BOOST_CMAKE_FETCH_URL` не задана, производится попытка получить адрес архива из
переменной окружения `BOOST_CMAKE_FETCH_URL`.

Для того, чтобы исключить обращение к сети при каждой генерации файлов сборки, можно сохранить этот файл локально:
```
cd d:
wget https://github.com/boostorg/boost/releases/download/boost-1.85.0/boost-1.85.0-cmake.tar.xz
```

После чего задать переменную окружения `BOOST_CMAKE_FETCH_URL`:
```cmake
BOOST_CMAKE_FETCH_URL=d:\boost-1.85.0-cmake.tar.xz
```

Можно явно задать URL архива для режима FetchContent:
```cmake
set(UMBA_USE_BOOST ON)
set(UMBA_USE_BOOST_FETCH ON)
set(UMBA_BOOST_CMAKE_FETCH_URL "d:/boost-1.85.0-cmake.tar.xz")

include(${CMAKE_CURRENT_LIST_DIR}/.cmake/umba.cmake)
```

